{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\OneDrive\\\\iRAP-Minirescue-GUI-main - Copy\\\\iRAP-Minirescue-GUI-main\\\\src\\\\components\\\\ROS\\\\ImageViewer\\\\index.tsx\";\nimport React, { Component } from 'react';\nimport * as ROSLIB from 'roslib';\nimport './css/image.css';\nimport ConnectionLostIMG from './resources/connection_lost.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = null;\n    this.componentDidMount = () => {\n      this.subscribeCamera();\n    };\n    this.state = {\n      imageUrl: '',\n      imageData: '',\n      imageTopic: new ROSLIB.Topic({\n        ros: this.props.ros,\n        name: this.props.ImageCompressedTopic,\n        // adjust the topic name based on your setup\n        messageType: 'sensor_msgs/CompressedImage'\n      })\n    };\n  }\n  subscribeCamera() {\n    const {\n      imageData,\n      imageTopic\n    } = this.state;\n    imageTopic.subscribe(message => {\n      const compressedImageMessage = message;\n      const format = compressedImageMessage.format;\n      const imageData = compressedImageMessage.data;\n      const imageUrl = `data:image/${format};base64,${imageData}`;\n      this.setState({\n        imageData: imageUrl\n      });\n      if (this.props.onImageRecevied) {\n        this.props.onImageRecevied(imageUrl);\n      }\n    });\n  }\n  render() {\n    const imageStyle = {\n      transform: `rotate(${this.props.rotate}deg)`\n      // transition: 'transform 0.5s ease', // Add a smooth transition for a better visual effect\n    };\n    if (this.state.imageData.length > 0 && this.props.hidden == false) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Image\",\n        style: imageStyle,\n        id: \"ros-image\",\n        src: this.state.imageData,\n        height: this.props.height,\n        width: this.props.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    } else {\n      return (\n        /*#__PURE__*/\n        // <div id=\"image-container\">\n        _jsxDEV(\"img\", {\n          className: \"Image\",\n          id: \"ros-image\",\n          src: ConnectionLostIMG,\n          height: this.props.height,\n          width: this.props.width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n        // </div>\n      );\n    }\n  }\n}\nexport default ImageViewer;","map":{"version":3,"names":["React","Component","ROSLIB","ConnectionLostIMG","jsxDEV","_jsxDEV","ImageViewer","constructor","props","ros","componentDidMount","subscribeCamera","state","imageUrl","imageData","imageTopic","Topic","name","ImageCompressedTopic","messageType","subscribe","message","compressedImageMessage","format","data","setState","onImageRecevied","render","imageStyle","transform","rotate","length","hidden","className","style","id","src","height","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/New/OneDrive/iRAP-Minirescue-GUI-main - Copy/iRAP-Minirescue-GUI-main/src/components/ROS/ImageViewer/index.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport * as ROSLIB from 'roslib';\n\nimport './css/image.css'\nimport ConnectionLostIMG from './resources/connection_lost.jpg'\n\ninterface IProps {\n  ros : ROSLIB.Ros\n  ImageCompressedTopic : string\n  // ImageData?: string\n  width : string\n  height : string\n  rotate : number\n  hidden: boolean\n  onImageRecevied?: (imageData: string) => void; // Callback function\n}\n\ninterface IState {\n  imageUrl: string;\n  imageData : string;\n  imageTopic :  ROSLIB.Topic<ROSLIB.Message>\n}\n\nclass ImageViewer extends Component<IProps, IState> {\n  ros: ROSLIB.Ros | null = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      imageData : '',\n      imageTopic : new ROSLIB.Topic({\n        ros: this.props.ros,\n        name: this.props.ImageCompressedTopic, // adjust the topic name based on your setup\n        messageType: 'sensor_msgs/CompressedImage',\n      })\n    };\n  }\n\n  subscribeCamera() {\n    const {imageData , imageTopic} = this.state;\n\n    imageTopic.subscribe((message: ROSLIB.Message) => {\n      const compressedImageMessage = message as ROSLIB.Message & { format: string; data: string };\n      const format = compressedImageMessage.format;\n      const imageData = compressedImageMessage.data;\n\n      const imageUrl = `data:image/${format};base64,${imageData}`;\n\n      this.setState({ imageData : imageUrl});\n      if (this.props.onImageRecevied) {\n        this.props.onImageRecevied(imageUrl);\n      }\n\n    });\n  }\n\n\n  componentDidMount = () => {\n    this.subscribeCamera()\n  }\n\n  render() {\n    const imageStyle: React.CSSProperties = {\n      transform: `rotate(${this.props.rotate}deg)`,\n      // transition: 'transform 0.5s ease', // Add a smooth transition for a better visual effect\n    };\n\n    if(this.state.imageData.length > 0 && this.props.hidden == false){\n      return (\n          <img className='Image' style={imageStyle} id=\"ros-image\" src={this.state.imageData} height={this.props.height} width={this.props.width}/>\n      );\n\n    }\n    else{\n      return (\n        // <div id=\"image-container\">\n          <img className='Image' id=\"ros-image\"  src={ConnectionLostIMG} height={this.props.height} width={this.props.width}/>\n        // </div>\n      );\n    }\n    \n  }\n}\n\nexport default ImageViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAEhC,OAAO,iBAAiB;AACxB,OAAOC,iBAAiB,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAmB/D,MAAMC,WAAW,SAASL,SAAS,CAAiB;EAGlDM,WAAWA,CAACC,KAAa,EAAE;IACzB,KAAK,CAACA,KAAK,CAAC;IAAC,KAHfC,GAAG,GAAsB,IAAI;IAAA,KAkC7BC,iBAAiB,GAAG,MAAM;MACxB,IAAI,CAACC,eAAe,CAAC,CAAC;IACxB,CAAC;IAhCC,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAG,EAAE;MACdC,UAAU,EAAG,IAAIb,MAAM,CAACc,KAAK,CAAC;QAC5BP,GAAG,EAAE,IAAI,CAACD,KAAK,CAACC,GAAG;QACnBQ,IAAI,EAAE,IAAI,CAACT,KAAK,CAACU,oBAAoB;QAAE;QACvCC,WAAW,EAAE;MACf,CAAC;IACH,CAAC;EACH;EAEAR,eAAeA,CAAA,EAAG;IAChB,MAAM;MAACG,SAAS;MAAGC;IAAU,CAAC,GAAG,IAAI,CAACH,KAAK;IAE3CG,UAAU,CAACK,SAAS,CAAEC,OAAuB,IAAK;MAChD,MAAMC,sBAAsB,GAAGD,OAA4D;MAC3F,MAAME,MAAM,GAAGD,sBAAsB,CAACC,MAAM;MAC5C,MAAMT,SAAS,GAAGQ,sBAAsB,CAACE,IAAI;MAE7C,MAAMX,QAAQ,GAAI,cAAaU,MAAO,WAAUT,SAAU,EAAC;MAE3D,IAAI,CAACW,QAAQ,CAAC;QAAEX,SAAS,EAAGD;MAAQ,CAAC,CAAC;MACtC,IAAI,IAAI,CAACL,KAAK,CAACkB,eAAe,EAAE;QAC9B,IAAI,CAAClB,KAAK,CAACkB,eAAe,CAACb,QAAQ,CAAC;MACtC;IAEF,CAAC,CAAC;EACJ;EAOAc,MAAMA,CAAA,EAAG;IACP,MAAMC,UAA+B,GAAG;MACtCC,SAAS,EAAG,UAAS,IAAI,CAACrB,KAAK,CAACsB,MAAO;MACvC;IACF,CAAC;IAED,IAAG,IAAI,CAAClB,KAAK,CAACE,SAAS,CAACiB,MAAM,GAAG,CAAC,IAAI,IAAI,CAACvB,KAAK,CAACwB,MAAM,IAAI,KAAK,EAAC;MAC/D,oBACI3B,OAAA;QAAK4B,SAAS,EAAC,OAAO;QAACC,KAAK,EAAEN,UAAW;QAACO,EAAE,EAAC,WAAW;QAACC,GAAG,EAAE,IAAI,CAACxB,KAAK,CAACE,SAAU;QAACuB,MAAM,EAAE,IAAI,CAAC7B,KAAK,CAAC6B,MAAO;QAACC,KAAK,EAAE,IAAI,CAAC9B,KAAK,CAAC8B;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAG/I,CAAC,MACG;MACF;QAAA;QACE;QACErC,OAAA;UAAK4B,SAAS,EAAC,OAAO;UAACE,EAAE,EAAC,WAAW;UAAEC,GAAG,EAAEjC,iBAAkB;UAACkC,MAAM,EAAE,IAAI,CAAC7B,KAAK,CAAC6B,MAAO;UAACC,KAAK,EAAE,IAAI,CAAC9B,KAAK,CAAC8B;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;QACrH;MAAA;IAEJ;EAEF;AACF;AAEA,eAAepC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}